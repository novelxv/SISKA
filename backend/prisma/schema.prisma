generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id       Int     @id @default(autoincrement())
    username String  @unique
    password String
    role     Role
}

enum Role {
    AKADEMIK
    ADMIN_KK
    ADMIN_PRODI
}

model Dosen {
  id_dosen           Int       @id @default(autoincrement())
  nama_tanpa_gelar  String
  nama_plus_gelar   String
  NIDN              String?
  NIP               String?
  KK                KelompokKeahlian?
  jenis_kepegawaian JenisKepegawaian?
  pangkat           String?
  jabatan_fungsional JabatanFungsional?
  status_kepegawaian StatusKepegawaian
  aktif_mulai       DateTime?
  aktif_sampai      DateTime?
  instansi_asal     String?
  Pembimbing        Pembimbing[]
  Penguji           Penguji[]
  DosenMatkul       DosenMatkul[]
}

enum KelompokKeahlian {
    INFORMATIKA
    ELEKTRONIKA
    REKAYASA_PERANGKAT_LUNAK_DAN_PENGETAHUAN
    SISTEM_KENDALI_DAN_KOMPUTER
    TEKNIK_TELEKOMUNIKASI
    TEKNIK_KETENAGALISTRIKAN
    TEKNIK_KOMPUTER
    TEKNOLOGI_INFORMASI
}

enum JenisKepegawaian {
    DOSEN_TETAP
    DOSEN_TAK_TETAP_PENGAJAR
    DOSEN_TAK_TETAP_PENELITI
    DOSEN_LUAR_STEI
    DOSEN_LUAR_ITB
    DOSEN_INDUSTRI
    ASISTEN_AKADEMIK
    TUTOR
}

enum StatusKepegawaian {
    AKTIF
    TIDAK_AKTIF
    PENSIUN
    PENSIUN_JANDA_DUDA
    TUGAS_BELAJAR
    MENGUNDURKAN_DIRI
    DIBERHENTIKAN_HORMAT
}

enum JabatanFungsional {
  ASISTEN_AHLI
  LEKTOR
  LEKTOR_KEPALA
  GURU_BESAR
}

model Pembimbing {
  id_dosen        Int
  NIM             String
  jabatan         String
  tanggal_sidang  DateTime

  Dosen           Dosen   @relation(fields: [id_dosen], references: [id_dosen])
  Mahasiswa       Mahasiswa @relation(fields: [NIM], references: [NIM])

  @@id([id_dosen, NIM])
}

model Penguji {
  id_dosen        Int
  NIM             String
  jabatan         String
  tanggal_sidang  DateTime

  Dosen           Dosen   @relation(fields: [id_dosen], references: [id_dosen])
  Mahasiswa       Mahasiswa @relation(fields: [NIM], references: [NIM])

  @@id([id_dosen, NIM])
}

model Mahasiswa {
  NIM             String    @id
  nama            String
  kelas           String?
  jurusan         String
  NIP_doswal      String

  Pembimbing      Pembimbing[]
  Penguji         Penguji[]
  Asisten         Asisten[]
}

model Asisten {
  NIM             String
  kode_matkul     String
  jabatan         JabatanAsisten

  status                    String
  nomorHP                   String
  email                     String
  kelas                     String
  DPK                       String
  jamKerja                  String
  namaTabungan              String
  namaBank                  String
  nomorRekening             String
  nomorNikKtp               String
  alamatKtp                 String 
  nomorNpwp                 String
  uploadKtm                 String 
  uploadKtp                 String
  uploadHalamanBukuTabungan String 
  uploadSuratPernyataan     String
  uploadLogbook             String
  
  Mahasiswa       Mahasiswa @relation(fields: [NIM], references: [NIM])
  MataKuliah      MataKuliah @relation(fields: [kode_matkul], references: [kode_matkul])

  @@id([NIM, kode_matkul])
}

enum JabatanAsisten {
    ASISTEN_KULIAH
    KOORDINATOR_ASISTEN_KULIAH
    ASISTEN_PRAKTIKUM
    KOORDINATOR_ASISTEN_PRAKTIKUM
}

model MataKuliah {
  kode_matkul     String   @id
  mata_kuliah     String
  kode_prodi      String
  sks             Int
  no_kelas        String
  kuota           Int
  jumlah_peserta  Int
  dosen_pengampu  String
  pembatasan      String
  DosenMatkul     DosenMatkul[]
  Asisten         Asisten[] 
}

model DosenMatkul {
  id_dosen        Int
  kode_matkul     String
  sks_six         Float
  beban_riil      Float
  jabatan         String

  Dosen           Dosen       @relation(fields: [id_dosen], references: [id_dosen])
  MataKuliah      MataKuliah  @relation(fields: [kode_matkul], references: [kode_matkul])

  @@id([id_dosen, kode_matkul])
}

model SK {
  no_sk             String   @id
  judul             String
  jenis_sk          JenisSK
  semester          Int
  tahun_akademik    Int?
  tanggal           DateTime
  status            SKStatus
  NIP_dekan         String
  file_sk           String?
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  Dekan         Dekan @relation(fields: [NIP_dekan], references: [NIP])
}

enum JenisSK {
  PENGAJARAN
  PEMBIMBING_PENGUJI
  PEMBIMBING_AKTIF
  WALI_TPB
  WALI_MHS_AKTIF
  ASISTEN_PRAKTIKUM
  LUAR_PRODI
}

enum SKStatus {
  DRAFT
  PUBLISHED
}

model Dekan {
  NIP           String   @id
  nama          String
  ttd_url       String?
  SKs           SK[]
}

model UploadStatus {
  templateType    String   @id
  uploaded        Boolean  @default(false)
  processed       Boolean  @default(false)
  uploadedAt      DateTime?
  processedAt     DateTime?
  filePath        String?
  
  @@map("upload_status")
}